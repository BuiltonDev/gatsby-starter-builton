{"version":3,"sources":["webpack:///./src/templates/productsPaginated.js"],"names":["data","context","pageContext","products","nodes","map","product","key","id","style","padding","href","basePath","textDecoration","color","Array","from","length","numPages","_","i","fontWeight","currentPage","query"],"mappings":"uNAKe,sBAAqC,IAAlCA,EAAiC,EAAjCA,KAAmBC,EAAc,EAA3BC,YAChBC,EAAWH,EAAKG,SAASC,MAC/B,OACE,kBAAC,IAAD,KACE,6BACGD,EAASE,KAAI,SAAAC,GAAO,OACnB,kBAAC,IAAD,eAASC,IAAKD,EAAQE,IAAQF,QAGlC,yBAAKG,MAAO,CAAEC,QAAS,WACrB,uBACEC,KAAMV,EAAQW,SACdH,MAAO,CAAEI,eAAgB,OAAQC,MAAO,UAF1C,KAMCC,MAAMC,KAAK,CAAEC,OAAQhB,EAAQiB,WAAYb,KAAI,SAACc,EAAGC,GAAJ,OAC5C,uBACET,KAAI,GAAKV,EAAQW,UAAWQ,EAAI,GAChCb,IAAG,aAAea,EAClBX,MAAO,CACLK,MAAO,QACPJ,QAAS,WACTG,eAAgB,OAChBQ,WAAYD,EAAI,IAAMnB,EAAQqB,YAAc,OAAS,WAGtDF,EAAI,MAGT,uBACET,KAAMV,EAAQiB,SACdT,MAAO,CAAEI,eAAgB,OAAQC,MAAO,UAF1C,QAWD,IAAMS,EAAK","file":"component---src-templates-products-paginated-js-1b31a9003fff7e71aded.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Product from \"../components/product\"\n\nexport default ({ data, pageContext: context }) => {\n  const products = data.products.nodes\n  return (\n    <Layout>\n      <div>\n        {products.map(product => (\n          <Product key={product.id} {...product} />\n        ))}\n      </div>\n      <div style={{ padding: \"20px 0\" }}>\n        <a\n          href={context.basePath}\n          style={{ textDecoration: \"none\", color: \"black\" }}\n        >\n          &laquo;\n        </a>\n        {Array.from({ length: context.numPages }).map((_, i) => (\n          <a\n            href={`${context.basePath}${i + 1}`}\n            key={`pagination${i}`}\n            style={{\n              color: \"black\",\n              padding: \"8px 16px\",\n              textDecoration: \"none\",\n              fontWeight: i + 1 === context.currentPage ? \"bold\" : \"normal\",\n            }}\n          >\n            {i + 1}\n          </a>\n        ))}\n        <a\n          href={context.numPages}\n          style={{ textDecoration: \"none\", color: \"black\" }}\n        >\n          &raquo;\n        </a>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($skip: Int!, $limit: Int!) {\n    products: allBuiltOnProduct(\n      filter: { main_product: { eq: true } }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        name\n        path\n        description\n        image {\n          childImageSharp {\n            fluid(quality: 100, maxWidth: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}